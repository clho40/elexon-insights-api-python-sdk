# coding: utf-8

"""
    Insights.Api

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from datetime import date
from typing import Optional
from pydantic import BaseModel, Field, StrictInt, StrictStr

class InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse(BaseModel):
    """
    InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse
    """
    participant_id: Optional[StrictStr] = Field(None, alias="participantId")
    participant_name: Optional[StrictStr] = Field(None, alias="participantName")
    credit_default_level: Optional[StrictInt] = Field(None, alias="creditDefaultLevel")
    entered_default_settlement_date: Optional[date] = Field(None, alias="enteredDefaultSettlementDate")
    entered_default_settlement_period: Optional[StrictInt] = Field(None, alias="enteredDefaultSettlementPeriod")
    cleared_default_settlement_date: Optional[date] = Field(None, alias="clearedDefaultSettlementDate")
    cleared_default_settlement_period: Optional[StrictInt] = Field(None, alias="clearedDefaultSettlementPeriod")
    cleared_default_text: Optional[StrictStr] = Field(None, alias="clearedDefaultText")
    __properties = ["participantId", "participantName", "creditDefaultLevel", "enteredDefaultSettlementDate", "enteredDefaultSettlementPeriod", "clearedDefaultSettlementDate", "clearedDefaultSettlementPeriod", "clearedDefaultText"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse:
        """Create an instance of InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        # set to None if participant_id (nullable) is None
        # and __fields_set__ contains the field
        if self.participant_id is None and "participant_id" in self.__fields_set__:
            _dict['participantId'] = None

        # set to None if participant_name (nullable) is None
        # and __fields_set__ contains the field
        if self.participant_name is None and "participant_name" in self.__fields_set__:
            _dict['participantName'] = None

        # set to None if cleared_default_settlement_date (nullable) is None
        # and __fields_set__ contains the field
        if self.cleared_default_settlement_date is None and "cleared_default_settlement_date" in self.__fields_set__:
            _dict['clearedDefaultSettlementDate'] = None

        # set to None if cleared_default_settlement_period (nullable) is None
        # and __fields_set__ contains the field
        if self.cleared_default_settlement_period is None and "cleared_default_settlement_period" in self.__fields_set__:
            _dict['clearedDefaultSettlementPeriod'] = None

        # set to None if cleared_default_text (nullable) is None
        # and __fields_set__ contains the field
        if self.cleared_default_text is None and "cleared_default_text" in self.__fields_set__:
            _dict['clearedDefaultText'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse:
        """Create an instance of InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse.parse_obj(obj)

        _obj = InsightsApiModelsResponsesBalancingCreditDefaultNoticeResponse.parse_obj({
            "participant_id": obj.get("participantId"),
            "participant_name": obj.get("participantName"),
            "credit_default_level": obj.get("creditDefaultLevel"),
            "entered_default_settlement_date": obj.get("enteredDefaultSettlementDate"),
            "entered_default_settlement_period": obj.get("enteredDefaultSettlementPeriod"),
            "cleared_default_settlement_date": obj.get("clearedDefaultSettlementDate"),
            "cleared_default_settlement_period": obj.get("clearedDefaultSettlementPeriod"),
            "cleared_default_text": obj.get("clearedDefaultText")
        })
        return _obj


